{"version":3,"sources":["assets/svg/image1.svg","assets/png/profile.png","components/Header/index.js","components/Section/Home/index.js","components/Section/Work/index.js","utils.js","components/Section/Contact/index.js","components/Section/About/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","React","Component","Home","src","imageSvg","Work","props","state","language","shuffleLanguage","array","temp","newTemp","originalLength","length","i","push","splice","Math","floor","random","j","shuffle","this","map","index","key","Contact","size","About","profilePic","color","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c21cfc69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image1.daae1082.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.fabdb834.png\";","import React from \"react\";\nimport \"./index.css\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className={\"header\"}>\n        <div className={\"headerLeft\"}>Sakthivel Govindan</div>\n        <div className={\"headerRight\"}>\n          <ul className={\"headerMenuList\"}>\n            <li className=\"headerMenuTitle headerMenuActive\">Home</li>\n            <li className={\"headerMenuTitle\"}>About</li>\n            <li className={\"headerMenuTitle\"}>Work</li>\n            <li className={\"headerMenuTitle\"}>Contact</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./index.css\";\n\nimport imageSvg from \"./../../../assets/svg/image1.svg\";\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className={\"home\"}>\n        <div className={\"homeLeft\"}>\n          <div className={\"homeText\"}>\n            <p>Become a full stack developer</p>\n          </div>\n          <div className={\"homeLine\"}></div>\n        </div>\n        <div className={\"homeRight\"}>\n          <img src={imageSvg} />,\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { shuffle } from \"./../../../utils\";\nimport \"./index.css\";\n\nclass Work extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: [\n        \"HTML\",\n        \"CSS\",\n        \"Javascript\",\n        \"JQuery\",\n        \"React JS\",\n        \"Node JS\",\n        \"React Native\",\n        \"MongoDB\",\n        \"Hasura\",\n        \"API\",\n        \"SQL\",\n        \"GraphQL\",\n      ],\n    };\n  }\n\n  render() {\n    const { language } = this.state;\n    const shuffleLanguage = shuffle(language);\n\n    return (\n      <div className={\"work\"}>\n        <div className={\"workLeft\"}>\n          <p className={\"workExperience\"}>Work experience</p>\n          <div className={\"workLine\"}></div>\n        </div>\n        <div className={\"workRight\"}>\n          <div className={\"languageDiv\"}>\n            {shuffleLanguage.map((language, index) => {\n              return (\n                <p key={\"language\" + index} className={\"languageName\"}>\n                  {language}\n                </p>\n              );\n            })}\n            <p className={\"languageName\"}>IoT ( learning )</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Work;\n","export const shuffle = (array) => {\n  let temp = [];\n  let newTemp = [];\n  let originalLength = array.length;\n  for (var i = 0; i < originalLength; i++) {\n    temp.push(array.splice(Math.floor(Math.random() * array.length), 1));\n  }\n\n  for (var j = 0; j < temp.length; j++) {\n    newTemp.push(temp[j][0]);\n  }\n  return newTemp;\n};\n","import React from \"react\";\nimport {\n  FaGithub,\n  FaFacebook,\n  FaInstagram,\n  FaTwitter,\n  FaLinkedinIn,\n} from \"react-icons/fa\";\nimport \"./index.css\";\n\nclass Contact extends React.Component {\n  state = {};\n\n  render() {\n    return (\n      <div className={\"contact\"}>\n        <div className={\"contactLeft\"}>\n          <div className={\"contactSocialLink\"}>\n            <div className={\"contactLink\"}>\n              <FaFacebook size={30} />\n            </div>\n            <div className={\"contactLink\"}>\n              <FaGithub size={30} />\n            </div>\n            <div className={\"contactLink\"}>\n              <FaLinkedinIn size={30} />\n            </div>\n            <div className={\"contactLink\"}>\n              <FaInstagram size={30} />\n            </div>\n            <div className={\"contactLink\"}>\n              <FaTwitter size={30} />\n            </div>\n          </div>\n        </div>\n        <div className={\"contactRight\"}>\n          <div>\n            <p className={\"contactText\"}>Contact Us</p>\n            <div className={\"contactLine\"}></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React from \"react\";\nimport { FaLinkedin } from \"react-icons/fa\";\nimport profilePic from \"./../../../assets/png/profile.png\";\nimport \"./index.css\";\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className={\"about\"}>\n        <div className={\"aboutLeft\"}>\n          <div className={\"aboutImage\"}>\n            <img src={profilePic} className={\"profileImage\"} />\n          </div>\n          <div className={\"aboutNameDetails\"}>\n            <p className={\"aboutName\"}>SAKTHIVEL GOVINDAN</p>\n            <p className={\"aboutRole\"}>FULL STACK DEVELOPER</p>\n            <FaLinkedin size={25} color=\"#3f50b4\" />\n          </div>\n        </div>\n        <div className={\"aboutRight\"}>\n          <div className={\"aboutDetails\"}>\n            <p className={\"aboutText\"}>About</p>\n            <div className={\"aboutLine\"}></div>\n            <p className={\"aboutDescription\"}>\n              Mohan brings you two decades of In-depth experience in IT Design,\n              Implementation and Automation. He is a Master in Cloud, DevOps and\n              infrastructure Design with recognized expertise in all industrial\n              verticals viz. Banking, Retail, Telecom, E-commerce, Hardware,\n              Defence. With an intense passion for Training and Opensource\n              Product Development he has mentored and trained 1000+\n              professionals on Cloud and DevOps across the country including\n              numerous leading organizations. He is driven to share his vast\n              knowledge through Corporate and Professional Cloud and DevOps\n              Training.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Section/Home\";\nimport Work from \"./components/Section/Work\";\nimport Contact from \"./components/Section/Contact\";\nimport About from \"./components/Section/About\";\nimport \"./index.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div>\n        <Home />\n        <About />\n        <Work />\n        <Contact />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}